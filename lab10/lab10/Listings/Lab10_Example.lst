C51 COMPILER V9.60.7.0   LAB10_EXAMPLE                                                     04/08/2024 16:19:10 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LAB10_EXAMPLE
OBJECT MODULE PLACED IN .\Objects\Lab10_Example.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Lab10_Example.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\Lab10_Example.lst) TABS(2) OBJECT(.\Objects\Lab10_Example.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include <stdio.h>
   3          bit tx_complete = 0;
   4          bit rx_complete = 0;
   5          const float a[8] ={0.02058851 ,0.06541966 ,0.16640878, 0.24758305, 0.24758305, 0.16640878,0.06541966, 0.02
             -058851};
   6            
   7          void msdelay(unsigned int time)
   8          {
   9   1        int i,j;
  10   1        for(i=0;i<time;i++)
  11   1        {
  12   2          for(j=0;j<382;j++);
  13   2        }
  14   1      }
  15          
  16          void uart_init(void)
  17          {
  18   1        TMOD=0x20;        
  19   1        TH1=0xF3;         
  20   1        SCON=0x50;        
  21   1        TCON=0x40;       
  22   1        ES=1;            
  23   1        EA=1;           
  24   1      }
  25            
  26          void transmit_char(unsigned char ch)
  27          {
  28   1        SBUF=ch;        
  29   1        while(!tx_complete);      
  30   1        tx_complete = 0;     
  31   1      }
  32          
  33          void transmit_string(unsigned char *s)
  34          {
  35   1        while(*s != 0)
  36   1        {
  37   2          transmit_char(*s++);
  38   2        }
  39   1      }
  40            
  41          unsigned char receive_char(void)
  42          {
  43   1        unsigned char ch = 0;
  44   1        while(!rx_complete);        
  45   1        rx_complete = 0;
  46   1        ch = SBUF;          
  47   1        return ch;          
  48   1      }
  49            
  50          void serial_ISR(void) interrupt 4
  51          {
  52   1        if(TI==1)     
  53   1        {
C51 COMPILER V9.60.7.0   LAB10_EXAMPLE                                                     04/08/2024 16:19:10 PAGE 2   

  54   2          TI = 0;     
  55   2          tx_complete = 1;  
  56   2        }
  57   1        else if(RI==1)      
  58   1        {
  59   2          RI = 0;     
  60   2          rx_complete = 1;
  61   2        }
  62   1      }
  63          
  64          void main(void)
  65          {
  66   1        unsigned char data_recv[5] = {0,0,0,0,'\0'};
  67   1        int sample_val;
  68   1      float sample_val_8[8];
  69   1      float y=0;
  70   1        int i,j,d;
  71   1        unsigned char data_send[5] = {0,0,0,0,'\0'};
  72   1        
  73   1        uart_init();
  74   1        
  75   1        while (1)
  76   1        {
  77   2          //receiving sample value from PC
  78   2          //since each sample is a 4 digit number, the digits are stored in a character array of length 4  
  79   2          data_recv[0] = receive_char();    
  80   2          data_recv[1] = receive_char();
  81   2          data_recv[2] = receive_char(); 
  82   2          data_recv[3] = receive_char();
  83   2          data_recv[4] = '\0';
  84   2      
  85   2          //converting character array to its equivalent integer value
  86   2          sample_val = (data_recv[0]-48)*1000 + (data_recv[1]-48)*100 + (data_recv[2]-48)*10 + (data_recv[3]-48);
  87   2          
  88   2            for(i=0;i<7;i++)
  89   2        {sample_val_8[i]=sample_val_8[i+1];}
  90   2        sample_val_8[7]=sample_val;
  91   2        y=0;
  92   2            for(j=0;j<8;j++)
  93   2        {y=y+a[j]*sample_val_8[j];
  94   3          
  95   3        }
  96   2          //doubling the obtained integer value (you need to implement filtering here...)
  97   2          
  98   2        //  sample_val_doub = sample_val * 2; 
  99   2          d=((int)y);
 100   2          
 101   2          //converting integer value back to 4 character array (i.e string)
 102   2          data_send[0] = 48 + (d/1000);
 103   2          data_send[1] = 48 + (d%1000/100);
 104   2          data_send[2] = 48 + (d%100/10);
 105   2          data_send[3] = 48 + (d%10);
 106   2          
 107   2          
 108   2          //transmitting output back to PC
 109   2          transmit_string(data_send);
 110   2          transmit_string("\r\n");
 111   2        }
 112   1      }
 113          


C51 COMPILER V9.60.7.0   LAB10_EXAMPLE                                                     04/08/2024 16:19:10 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    538    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     32      55
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
